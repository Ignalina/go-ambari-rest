version: '2.3'
services:
  postgres:
    image: postgres:9.6
    environment:
      POSTGRES_DB: ambari
      POSTGRES_PASSWORD: ambari
      POSTGRES_USER: ambari
  freeipa:
    image: freeipa/freeipa-server
    sysctls:
      net.ipv6.conf.all.disable_ipv6: 0
    tmpfs:
      - /run
      - /tmp
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:ro
    command: -U -p adminadmin -a adminadmin -n test.local -r TEST.LOCAL
    tty: true
    hostname: pdc.test.local
    domainname: test.local
  ambari-server:
    image: webcenter/ambari-server:latest
    links:
      - postgres:db
      - freeipa:pdc.test.local
    hostname: ambari-server
    ports:
      - 80:8080/tcp
  ambari-agent:
    image: webcenter/ambari-agent:latest
    links:
      - ambari-server:ambari-server
    hostname: ambari-agent
    environment:
      http_proxy: ${http_proxy}
      https_proxy: ${https_proxy}
  ambari-agent2:
    image: webcenter/ambari-agent:latest
    links:
      - ambari-server:ambari-server
    hostname: ambari-agent2
    environment:
      http_proxy: ${http_proxy}
      https_proxy: ${https_proxy}
  ambari-agent3:
    image: webcenter/ambari-agent:latest
    links:
      - ambari-server:ambari-server
    hostname: ambari-agent3
    environment:
      http_proxy: ${http_proxy}
      https_proxy: ${https_proxy}
  test:
    image: golang:1.11
    working_dir: /go/src/github.com/disaster37/go-ambari-rest
    volumes:
      - .:/go/src/github.com/disaster37/go-ambari-rest
    command: "bash -c \"go get -t ./... && go test ./... -parallel=1\""
    links:
      - ambari-server:ambari-server
      - ambari-agent:ambari-agent
      - ambari-agent2:ambari-agent2
      - ambari-agent3:ambari-agent3
    environment:
      http_proxy: ${http_proxy}
      https_proxy: ${https_proxy}

  build:
    image: golang:1.11
    working_dir: /go/src/github.com/disaster37/go-ambari-rest
    volumes:
      - .:/go/src/github.com/disaster37/go-ambari-rest
    command: "bash -c \"go get -d ./... && go get github.com/mitchellh/gox && gox -osarch='linux/amd64' -output 'release/ambari-cli_{{.OS}}_{{.Arch}}'\""
    environment:
      http_proxy: ${http_proxy}
      https_proxy: ${https_proxy}
  curl:
    image: appropriate/curl:latest
    links:
      - ambari-server:ambari-server

  cli:
    image: debian:latest
    volumes:
      - .:/workspace
    working_dir: /workspace
    entrypoint: "/workspace/release/ambari-cli_linux_amd64"
    links:
      - ambari-server:ambari-server
      - ambari-agent:ambari-agent
      - ambari-agent2:ambari-agent2
